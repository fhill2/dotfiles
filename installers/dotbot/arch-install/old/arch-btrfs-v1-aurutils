#!/bin/bash


# https://disconnected.systems/blog/archlinux-installer/#partitioning-and-formatting-the-disk
# Modifications made:
# no swap
# create btrfs instead of ext4


# to rerun:
# umount -l /mnt

#https://www.youtube.com/watch?v=Xynotc9BKe8

set -uo pipefail
trap 's=$?; echo "$0: Error on line "$LINENO": $BASH_COMMAND"; exit $s' ERR

REPO_URL="https://s3.eu-west-2.amazonaws.com/mdaffin-arch/repo/x86_64"
MIRRORLIST_URL="https://archlinux.org/mirrorlist/?country=GB&protocol=https&use_mirror_status=on"

pacman -Sy --noconfirm pacman-contrib dialog

echo "Updating mirror list"
curl -s "$MIRRORLIST_URL" | \
       sed -e 's/^#Server/Server/' -e '/^#/d' | \
       rankmirrors -n 5 - > /etc/pacman.d/mirrorlist



### Get infomation from user ###
hostname=$(dialog --stdout --inputbox "Enter hostname" 0 0) || exit 1
clear
: ${hostname:?"hostname cannot be empty"}

#user=$(dialog --stdout --inputbox "Enter admin username" 0 0) || exit 1
#clear
#: ${user:?"user cannot be empty"}


# password=$(dialog --stdout --passwordbox "Enter admin password" 0 0) || exit 1
# clear
# : ${password:?"password cannot be empty"}
# password2=$(dialog --stdout --passwordbox "Enter admin password again" 0 0) || exit 1
# clear
# [[ "$password" == "$password2" ]] || ( echo "Passwords did not match"; exit 1; )
user="f1"
password="."

devicelist=$(lsblk -dplnx size -o name,size | grep -Ev "boot|rpmb|loop" | tac)
device=$(dialog --stdout --menu "Select installtion disk" 0 0 0 ${devicelist}) || exit 1
clear

### Set up logging ###
exec 1> >(tee "stdout.log")
exec 2> >(tee "stderr.log")


parted --script "${device}" -- mklabel gpt \
  mkpart ESP fat32 1Mib 129MiB \
  set 1 boot on \
  mkpart primary btrfs 129MiB 100%

echo "$device"
# Simple globbing was not enough as on one device I needed to match /dev/mmcblk0p1 
# but not /dev/mmcblk0boot1 while being able to match /dev/sda1 on other devices.
part_boot="$(ls ${device}* | grep -E "^${device}p?1$")"
part_root="$(ls ${device}* | grep -E "^${device}p?2$")"



wipefs "${part_boot}"
wipefs "${part_root}"

mkfs.fat -F32 "${part_boot}"
mkfs.btrfs -f "${part_root}"

mount "${part_root}" /mnt
mkdir /mnt/boot

#echo "$part_boot"
#echo "$part_root"

btrfs subvolume create /mnt/@
btrfs subvolume create /mnt/@home
btrfs subvolume create /mnt/@snapshots
btrfs subvolume create /mnt/@var_log

umount -l /mnt
mount -o noatime,compress=lzo,space_cache=v2,subvol=@ "${part_root}" /mnt
mkdir -p /mnt/{boot,home,.snapshots,var_log}
mkdir -p /mnt/boot/EFI
mount -o noatime,compress=lzo,space_cache=v2,subvol=@home "${part_root}" /mnt/home
mount -o noatime,compress=lzo,space_cache=v2,subvol=@snapshots "${part_root}" /mnt/.snapshots
mount -o noatime,compress=lzo,space_cache=v2,subvol=@var_log "${part_root}" /mnt/var_log
mount "${part_boot}" /mnt/boot/EFI

cat >>/etc/pacman.conf <<EOF
[fhill2]
SigLevel = Optional TrustAll
Server = file:///nfs/dev/arch/pkg
EOF

# pacstrap is needed for the next command to work, as base package installs all system files
pacstrap /mnt fhill2-base
genfstab -U /mnt >> /mnt/etc/fstab
echo "${hostname}" > /mnt/etc/hostname

cat >>/mnt/etc/pacman.conf <<EOF
[fhill2]
SigLevel = Optional TrustAll
Server = file:///nfs/dev/arch/pkg
EOF

arch-chroot /mnt ln -sf /usr/share/zoneinfo/Europe/London /etc/localtime
arch-chroot /mnt hwclock --systohc


echo "en_GB.UTF-8 UTF-8" > /mnt/etc/locale.gen
arch-chroot /mnt locale-gen
echo "LANG=en_GB.UTF-8" > /mnt/etc/locale.conf

cat >>/mnt/etc/hosts <<EOF
127.0.0.1 localhost
::1 localhost
127.0.0.1 $hostname.localdomain $hostname

192.168.0.22 arch-desk
EOF

arch-chroot /mnt grub-install --target=x86_64-efi --bootloader-id=grub_uefi
arch-chroot /mnt grub-mkconfig -o /boot/grub/grub.cfg

arch-chroot /mnt useradd -mU -s /usr/bin/zsh -G wheel "$user"
arch-chroot /mnt chsh -s /usr/bin/zsh
echo "$user:$password" | chpasswd --root /mnt
echo "root:$password" | chpasswd --root /mnt
arch-chroot /mnt systemctl enable --now NetworkManager

# enable NAS LAN nfs share on login
mkdir /mnt/nfs 
cat >>/mnt/etc/fstab <<EOF
arch-desk:/home/f1 /nfs nfs defaults,timeo=900,retrans=5,_netdev 0 0
EOF
