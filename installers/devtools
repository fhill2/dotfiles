#!/usr/bin/env bash


########

# Packages 
# source "${BASH_SOURCE%/*}/shared.sh"
source _installer.sh

# require_installer package-manager

dotheader "Setting up devtools..."

install_rust() {
	if ! command_exists "cargo"; then
		brew_install rustup
		rustup-init -y
		source $HOME/.cargo/env
	fi
}
install_rust
cargo_install proximity-sort

install_git() {
  install_package "git"
  brew_install diff-so-fancy
  brew_tap_install jesseduffield/lazygit
  brew_install lazygit
  symlink_dotfile config/git/gitattributes ~/.gitattributes
  symlink_dotfile config/git/gitconfig ~/.gitconfig
  symlink_dotfile config/git/gitignore ~/.gitignore
}

install_bat() {
	brew_install bat
	mkdir -p ~/.config/bat
	symlink_dotfile bat/config ~/.config/bat/config
}

# brew_cask_install alacritty

# ========== Linux Only Programs ==========
linux_install dunst
is_linux && symlink_dotfile config/dunst ~/.config/dunst

linux_install gobang
is_linux && symlink_dotfile config/gobang ~/.config/gobang

linux_install kmonad
is_linux && symlink_dotfile config/kmonad ~/.config/kmonad

pac_install i3status-rust-git
is_linux && symlink_dotfile config/i3status-rust ~/.config/i3status-rust
# i3status-rs lists its dependencies in the aur package and they are not installed automatically
# installing i3status-rs through cargo does not install the correct files into /usr/share/i3status-rs for icons and themes to work
linux_install "ttf-font-awesome"
linux_install "upower"
linux_install "speedtest-cli"

linux_install nemo
# otherwise nemo has no nemo context menu "extract here"
linux_install nemo-fileroller 
is_linux && symlink_dotfile config/nemo ~/.config/nemo

linux_install rofi
is_linux && symlink_dotfile config/rofi ~/.config/rofi

linux_install sxhkd
is_linux && symlink_dotfile config/sxhkd ~/.config/sxhkd

is_linux && symlink_dotfiles config/gnupg/gpg-agent.conf ~/.config/.gnupg/gpg-agent.conf

linux_install pistol
is_linux && symlink_dotfile config/pistol ~/.config/pistol

linux_install spacefm
is_linux && symlink_dotfile config/spacefm ~/.config/spacefm
# for mounting smb shares using spaceFM spaceFm dependency
linux_install "udevil"

# ========== Mac & Linux Programs ==========

install_package flavours
symlink_dotfile config/flavours ~/.config/flavours

install_package kitty
symlink_dotfile config/kitty ~/.config/kitty

install_package starship
symlink_dotfile config/starship ~/.config/starship

install_package xplr
symlink_dotfile config/xplr ~/.config/xplr

install_package broot
symlink_dotfile config/broot ~/.config/broot

# ========================================
install_package trash

pac_install gnome-session
pac_install gnome-shell

pac_install rofi-emoji
# to use with rofi-emoji
pac_install "noto-fonts-emoji"
pac_install rofi-calc

pac-install net-tools # netstat

linux_install maim
linux_install gpg-tui
linux_install pass

# pacman preview_tui and linux previewer dependencies
install_package "less"
linux_install "tree"
linux_install "mediainfo"
linux_install "unzip"
linux_install "unrar"
linux_install "man-db"
linux_install "tar"
linux_install "imagemagick"
linux_install "ffmpegthumbnailer" # + ffmpeg, installed with media installer
linux_install "libreoffice-fresh"
linux_install "poppler"
# gnome-epub-thumbnailer
linux_install "glow"
linux_install "w3m"

# detects AUR packages that need to be rebuilt after upgrading system packages (very useful) 
# checks if AUR packages can find the requires shared link libraries
pac_install "rebuild-detector"



linux_install nmap

# gnu-netcat does not have -U option for vlc link script
pac_install openbsd-netcat

 # sourcegraph installed this manually as validation did not pass
  # had to install with yay -S --mflags '--skipchecksums' -S src-cli-bin
linux_install "src-cli-bin"


install_package fd
brew_install coreutils

install_package sl
install_package wget


# ack is a grep-like source code search tool.
brew_install ack 
apt_install ack-grep

brew_install gnu-tar



brew_install node
brew_install npm



brew_install exa
brew_install neofetch
brew_install ripgrep
apt_install ripgrep





brew_install gnu-sed # some nvim app needs this on osx



brew_install zoxide
brew_install "colordiff"
brew_install "fzf"
brew_install "go"
install_package "jq"
brew_install "mas"
brew_install "nmap"
brew_install "node"
brew_install "rename"
brew_install "ripgrep"
brew_install "rsync"
brew_install "terminal-notifier"
brew_install "rar" # <-- unrar moved due to licensing issues

install_package direnv


# pytower deps
brew_tap_install "homebrew/cask"
brew_tap_install "esolitos/ipa"
brew_tap_install "yulrizka/tap"
brew_install 'poetry'
brew_install 'pre-commit'
brew_install 'ta-lib'

# https://github.com/nana-4/materia-theme
  # trying out a material theme, instead of material base64 theme
  # as gtk base64 FlatColour does not work as well as I want it (cant see selection)
linux_install "materia-gtk-theme"
  # configuration for materia-gtk-theme is done with this
  linux_install "themix-gui-git"


install_bat


# aur monitor brightness control
linux_install "ddccontrol-db-git"
linux_install "ddccontrol"

  # for file sharing
linux_install "samba"


  


  linux_install "pandoc-cli"
  # install microsoft default installed fonts for web dev
  linux_install "ttf-ms-win10-auto"


  # nfs server and client
 linux_install "nfs-utils"

 install_package "bitwarden" # electron bitwarden GUI - CLI installed via npm
  "pet"

brew_install showkey
brew_install yarn

# a secrets workflow:
# gnupg -> installed via package manager
# gpg private key -> stored in bw, unsynced
# password store -> synced privately using syncthing
install_package gnupug


brew_cask_install 'tailscale'
brew_install 'tailscale' # for tailscale debugging

brew_install 'act'



# pytower - reading parquet files
brew_install parquet-cli
