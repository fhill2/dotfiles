## plugins to try:
# lincheney/fzf-tab-completion
# zplug "marlonrichert/zsh-edit"
# zplug "zsh-users/zsh-syntax-highlighting", defer:2 # using fast-syntax-highlighting now
# zplug 'agkozak/zhooks'
# zplug 'NullSense/fuzzy-sys' # Utility for using systemctl interactively via fzf




## ======= Antigen ======
source $(brew --prefix)/share/antigen/antigen.zsh
antigen bundle dbalatero/fzf-git
antigen bundle DarrinTisdale/zsh-aliases-exa
antigen bundle chriskempson/base16-shell
antigen bundle wookayin/fzf-fasd
antigen bundle twang817/zsh-ssh-agent
antigen bundle zsh-users/zsh-completions
antigen bundle dbalatero/fast-syntax-highlighting
antigen bundle hlissner/zsh-autopair
antigen bundle jeffreytse/zsh-vi-mode
antigen bundle 'zsh-users/zsh-autosuggestions'
# antigen theme romkatv/powerlevel10k


# =========== Plugins ============
#source $HOME/.zsh/vendor/antigen.zsh

antigen bundle robbyrussell/oh-my-zsh plugins/git

# if [ ! -f ~/.config/dotfiles/no-nvm ]; then
antigen bundle robbyrussell/oh-my-zsh plugins/nvm
# fi

antigen bundle robbyrussell/oh-my-zsh plugins/pyenv

[ -f ~/.base16_theme ] && source ~/.base16_theme


antigen apply


# ======== Cache directory (for oh-my-zsh plugins) =========
[ ! -d $HOME/.zcustom/cache ] && mkdir -p $HOME/.zcustom/cache

export ZSH="$HOME/.zcustom"
export ZSH_CACHE_DIR="$ZSH/cache"

# ======== Settings ===========

# Disable auto title so tmux window titles don't get messed up.
export DISABLE_AUTO_TITLE="true"

# Maintain a stack of cd directory traversals for `popd`
setopt AUTO_PUSHD

# Allow extended matchers like ^file, etc
set -o EXTENDED_GLOB

eval "$(direnv hook zsh)"
#eval "$(fasd --init auto)"
eval "$(starship init zsh)"
eval "$(zoxide init zsh)"

eval "$(pyenv init --path)"

# source /home/f1/.config/broot/launcher/bash/br

# ========= History settings =========
if [ -z "$HISTFILE" ]; then
  HISTFILE=$HOME/.zsh_history
fi

HISTSIZE=10000
SAVEHIST=10000

setopt append_history
setopt extended_history
setopt hist_expire_dups_first
setopt hist_ignore_dups # ignore duplication command history list
setopt hist_ignore_space
setopt inc_append_history
setopt share_history # share command history data
setopt extended_glob








# =========== Custom settings ================

for file in $HOME/.zsh/custom/**/*.zsh
do
  source $file
done

# source $HOME/.zsh/themes/original.zsh

# for file in $HOME/.zsh/secrets/**/*.zsh
# do
#   source $file
# done

[ -f ~/.zshrc.local ] && source ~/.zshrc.local
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh





### OLD
## ======= AUTOCOMPLETE SETTINGS ======
## zstyle ':autocomplete:*' min-delay 0.1
# LISTMAX=-1
#zstyle ':autocomplete:*' min-input 2

# fix: remove 'do you want to see all possibilities' message
#zstyle -d ':completion:*' list-prompt
#zstyle -d ':completion:*' select-prompt
#zstyle ':completion:*' list-prompt   '%S%m%s'
# zstyle ':completion:*' select-prompt '%S%m%s'

# https://github.com/zsh-users/zsh-syntax-highlighting/issues/871
# ZVM_INIT_MODE='sourcing'
# source ~/dev/zsh-src/vi-mode.zsh

# if ! zplug check --verbose; then
#   printf "Install? [y/N]: "
#   if read -q; then
#     echo; zplug install
#   fi
# fi
# zplug load

#https://archive.zhimingwang.org/blog/2015-09-21-zsh-51-and-bracketed-paste.html
# zle_bracketed_paste is causing spam when launching fzf function
#unset zle_bracketed_paste




# my old history settings
# HISTFILE=~/.zsh_history
# HISTSIZE=100000
# SAVEHIST=100000
# setopt appendhistory
# # if the command line string already exists in ~/.zsh_history, do not add it again
# setopt HIST_IGNORE_DUPS
# function src() {
#   export SRC_ENDPOINT=http://localhost:7080
#   export SRC_ACCESS_TOKEN=$(pass show src/graphql-pat)
#   /usr/bin/src $@
# }

# function test_preview {
#   FIFO=$HOME/tmp/nnn.fifo
#   [ ! -p "$FIFO" ] && mkfifo $FIFO
#   NNN_FIFO=$FIFO preview_tabbed.bash &
#   ps aux | grep preview_tabbed
#   # preview_tabbed.bash "$1"
#   echo "$1" >> $FIFO
# }

# the-way
# tws() {
#   PREV=$(fc -lrn | head -n 1)
#   sh -c "the-way cmd `printf %q "$PREV"`"
# }
#
# f_tw_zle() {
#   BUFFER=$(the-way search --stdout --languages="sh")
#    CURSOR=$#BUFFER
#    #zle redisplay
#   #print -z $BUFFER
# }
#
# f_tw() {
# result=$(the-way search --stdout --languages="sh")
# eval "$result"
# }
#



# zle -N f_tw
#bindkey '^m' tw
source /Users/f1/.config/broot/launcher/bash/br
