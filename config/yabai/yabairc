#!/usr/bin/env sh



# FOR DEBUGGING LAUNCHD
# echo "PATH IS: "
# echo "$PATH"
# echo "ENV IS: "
# env


current_date_and_time=$(date)
echo "========== $current_date_and_time: YABAIRC STARTUP ========="

# for this to work you must configure sudo such that
# it will be able to run the command without password
#
# see this wiki page for information:
#  - https://github.com/koekeishiya/yabai/wiki/Installing-yabai-(latest-release)#configure-scripting-addition

if [ -f "/private/etc/sudoers.d/yabai" ]; then
  yabai -m signal --add event=dock_did_restart action="sudo yabai --load-sa"
  sudo yabai --load-sa
fi


# Yabai does not clear empty spaces by default when logging in and out

# https://d12frosted.io/posts/2022-04-23-yabai-spaces.html
# function setup_space {
#   local idx="$1"
#   local name="$2"
#   local space=
#   echo "setup space $idx : $name"
#
#   space=$(yabai -m query --spaces --space "$idx")
#   if [ -z "$space" ]; then
#     yabai -m space --create
#   fi
#
#   yabai -m space "$idx" --label "$name"
# }
#
# setup_space 1 "one"
# setup_space 2 "two"
# setup_space 3 "three"
# setup_space 4 "four"
# setup_space 5 "five"
# setup_space 6 "six"

# yabai -m space --create 1 --display 1 --label "one"
# yabai -m space --create 2 --display 2 --label "two"
# yabai -m space --create 3 --display 1 --label "three"
# yabai -m space --create 4 --display 2 --label "four"
# yabai -m space --create 5 --display 1 --label "five"
# yabai -m space --create 6 --display 2 --label "six"
# yabai -m space --create 7 --display 1 --label "seven"
# yabai -m space --create 8 --display 2 --label "eight"


# window_origin_display
# -> focused -> if the last window is closed on a workspace, yabai unfocuses the workspace. I then cant open a window on the workspace that has become unfocused
# -> cursor -> above applies, but there is a chance the cursor will be on the unfocused workspace.

# global settings
yabai -m config                                 \
    mouse_follows_focus          off            \
    focus_follows_mouse          off            \
    window_origin_display        cursor        \
    window_placement             first_child   \
    window_topmost               off            \
    window_shadow                on             \
    window_animation_duration    0.0            \
    window_opacity_duration      0.0            \
    active_window_opacity        1.0            \
    normal_window_opacity        0.90           \
    window_opacity               off            \
    insert_feedback_color        0xffd75f5f     \
    active_window_border_color   0xff147698     \
    normal_window_border_color   0xff505050     \
    window_border_width          4              \
    window_border_radius         12             \
    window_border_blur           off            \
    window_border_hidpi          on             \
    window_border                on            \
    split_ratio                  0.50           \
    split_type                   auto           \
    auto_balance                 off            \
    top_padding                  0             \
    bottom_padding               0             \
    left_padding                 0             \
    right_padding                0             \
    window_gap                   0             \
    layout                       bsp            \
    mouse_modifier               fn             \
    mouse_action1                move           \
    mouse_action2                resize         \
    mouse_drop_action            swap

echo "yabai configuration loaded.."



# https://github.com/FallenMax/sketchybar-config/blob/main/.yabairc
# https://github.com/koekeishiya/yabai/blob/master/doc/yabai.asciidoc#signal
EVENTS_FOR_BAR=(
  # application_launched
  # application_terminated
  # application_front_switched
  # application_activated
  # application_deactivated
  application_visible
  application_hidden
  window_created
  window_destroyed
  # window_focused
  # window_moved
  # window_resized
  window_minimized
  window_deminimized
  window_title_changed
  space_changed
  display_added
  display_removed
  # display_moved
  # display_resized
  # display_changed
  # mission_control_enter
  # mission_control_exit
  # dock_did_restart
  # menu_bar_hidden_changed
  # dock_did_change_pref
)

# require flock: https://github.com/discoteq/flock

for event in "${EVENTS_FOR_BAR[@]}"; do
  echo "registering $event for update_sketchybar"

  # patch $PATH so zx/node can be located by yabai
  # add echo 'event:' Â§event && -> start of command for debugging
  yabai -m signal --add \
    event="$event" \
    label="update_sketchybar__${event}" \
    action="export PATH=$PATH:/usr/local/bin:/opt/homebrew/bin/:$HOME/Library/pnpm && flock -nE 0 $HOME/.config/sketchybar/update_sketchybar.lock $HOME/.config/sketchybar/update_sketchybar.mjs --quiet"
done
export PATH=$PATH:/usr/local/bin:/opt/homebrew/bin/:$HOME/Library/pnpm && "$HOME/.config/sketchybar/update_sketchybar.mjs" --quiet



# ignore apps (always float)
yabai -m rule --add app="^System Settings$" manage=off
yabai -m rule --add app="^Archive Utility$" manage=off
yabai -m rule --add app="^Wally$" manage=off
yabai -m rule --add app="^Pika$" manage=off
yabai -m rule --add app="^balenaEtcher$" manage=off
yabai -m rule --add app="^Creative Cloud$" manage=off
yabai -m rule --add app="^Logi Options$" manage=off
yabai -m rule --add app="^Alfred Preferences$" manage=off
yabai -m rule --add app="^Hammerspoon Console$" manage=off
yabai -m rule --add app="Raycast" manage=off

yabai -m rule --add app="Discord"       space=5
yabai -m rule --add app="Slack"             space=5
yabai -m rule --add app='^Bitwarden$' space=5
yabai -m rule --add app="^Transmission$" space=5


yabaictl update_spaces




# REGEX       := POSIX extended regular expression syntax
# LABEL       := arbitrary string/text used as an identifier
# LAYER       := below | normal | above
# BOOL_SEL    := on | off
# FLOAT_SEL   := 0 < <value> <= 1.0
# RULE_SEL    := <index> | LABEL
# SIGNAL_SEL  := <index> | LABEL
# DIR_SEL     := north | east | south | west
# STACK_SEL   := stack.prev | stack.next | stack.first | stack.last | stack.recent
# WINDOW_SEL  := prev | next | first | last | recent | mouse | largest | smallest | sibling | first_nephew | second_nephew | uncle | first_cousin | second_cousin | STACK_SEL | DIR_SEL | <window id>
# DISPLAY_SEL := prev | next | first | last | recent | mouse | DIR_SEL | <arrangement index (1-based)>
# SPACE_SEL   := prev | next | first | last | recent | mouse | <mission-control index (1-based)> | LABEL
